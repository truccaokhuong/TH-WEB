// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TH_WEB.Data;

#nullable disable

namespace TH_WEB.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250515203758_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TH_WEB.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("ActualCheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualCheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BookingSource")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CancellationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CancellationReason")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("GuestEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GuestName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GuestPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("HasReviewed")
                        .HasColumnType("bit");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdentificationType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFullyPaid")
                        .HasColumnType("bit");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfRooms")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<decimal?>("RefundAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("SpecialRequests")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("TH_WEB.Models.BookingAddon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("BookingAddon");
                });

            modelBuilder.Entity("TH_WEB.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("AcceptsCreditCards")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("AvailableRooms")
                        .HasColumnType("int");

                    b.Property<string>("CancellationPolicy")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("CheckInTime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CheckOutTime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("HasAirportShuttle")
                        .HasColumnType("bit");

                    b.Property<bool>("HasBar")
                        .HasColumnType("bit");

                    b.Property<bool>("HasBathTub")
                        .HasColumnType("bit");

                    b.Property<bool>("HasBreakfast")
                        .HasColumnType("bit");

                    b.Property<bool>("HasBusinessFacilities")
                        .HasColumnType("bit");

                    b.Property<bool>("HasChildrenActivities")
                        .HasColumnType("bit");

                    b.Property<bool>("HasFitnessCenter")
                        .HasColumnType("bit");

                    b.Property<bool>("HasFreeWifi")
                        .HasColumnType("bit");

                    b.Property<bool>("HasGym")
                        .HasColumnType("bit");

                    b.Property<bool>("HasParking")
                        .HasColumnType("bit");

                    b.Property<bool>("HasRestaurant")
                        .HasColumnType("bit");

                    b.Property<bool>("HasRoomService")
                        .HasColumnType("bit");

                    b.Property<bool>("HasSpa")
                        .HasColumnType("bit");

                    b.Property<bool>("HasSwimmingPool")
                        .HasColumnType("bit");

                    b.Property<string>("HotelChain")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HotelType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPetFriendly")
                        .HasColumnType("bit");

                    b.Property<string>("LanguagesSpoken")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(10,7)");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(10,7)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PaymentOptions")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Policies")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(3,1)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("StarRating")
                        .HasColumnType("int");

                    b.Property<int>("TotalBookings")
                        .HasColumnType("int");

                    b.Property<int>("TotalReviews")
                        .HasColumnType("int");

                    b.Property<int>("TotalRooms")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("YearBuilt")
                        .HasColumnType("int");

                    b.Property<int?>("YearRenovated")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AcceptsCreditCards = true,
                            Address = "123 Beach Road",
                            AvailableRooms = 0,
                            CancellationPolicy = "Free cancellation within 24 hours.",
                            CheckInTime = "14:00",
                            CheckOutTime = "12:00",
                            City = "Miami",
                            Country = "USA",
                            CreatedAt = new DateTime(2015, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Experience luxury and comfort in our 5-star resort with stunning views.",
                            Email = "luxury@ezbooking.com",
                            HasAirportShuttle = false,
                            HasBar = true,
                            HasBathTub = true,
                            HasBreakfast = false,
                            HasBusinessFacilities = true,
                            HasChildrenActivities = true,
                            HasFitnessCenter = true,
                            HasFreeWifi = true,
                            HasGym = true,
                            HasParking = true,
                            HasRestaurant = true,
                            HasRoomService = true,
                            HasSpa = false,
                            HasSwimmingPool = true,
                            HotelChain = "EzBooking",
                            HotelType = "Resort",
                            ImageUrl = "/images/hotels/luxury-resort.jpg",
                            IsActive = true,
                            IsFeatured = false,
                            IsPetFriendly = false,
                            LanguagesSpoken = "English, Vietnamese",
                            Name = "EzBooking Luxury Resort",
                            PaymentOptions = "Credit Card, Cash",
                            Phone = "0123456789",
                            Policies = "No smoking in rooms.",
                            PostalCode = "",
                            PricePerNight = 0m,
                            Rating = 4.8m,
                            Region = "",
                            StarRating = 5,
                            TotalBookings = 6000,
                            TotalReviews = 1500,
                            TotalRooms = 0,
                            UpdatedAt = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Website = "",
                            YearBuilt = 2015,
                            YearRenovated = 2022
                        },
                        new
                        {
                            Id = 2,
                            AcceptsCreditCards = true,
                            Address = "456 Main Street",
                            AvailableRooms = 0,
                            CancellationPolicy = "Non-refundable.",
                            CheckInTime = "14:00",
                            CheckOutTime = "12:00",
                            City = "New York",
                            Country = "USA",
                            CreatedAt = new DateTime(2010, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Located in the heart of downtown, perfect for business and leisure travelers.",
                            Email = "citycenter@ezbooking.com",
                            HasAirportShuttle = false,
                            HasBar = true,
                            HasBathTub = true,
                            HasBreakfast = false,
                            HasBusinessFacilities = true,
                            HasChildrenActivities = false,
                            HasFitnessCenter = true,
                            HasFreeWifi = true,
                            HasGym = true,
                            HasParking = false,
                            HasRestaurant = true,
                            HasRoomService = true,
                            HasSpa = false,
                            HasSwimmingPool = false,
                            HotelChain = "EzBooking",
                            HotelType = "Business Hotel",
                            ImageUrl = "/images/hotels/city-center.jpg",
                            IsActive = true,
                            IsFeatured = false,
                            IsPetFriendly = false,
                            LanguagesSpoken = "English",
                            Name = "EzBooking City Center",
                            PaymentOptions = "Credit Card",
                            Phone = "0987654321",
                            Policies = "No pets allowed.",
                            PostalCode = "",
                            PricePerNight = 0m,
                            Rating = 4.5m,
                            Region = "",
                            StarRating = 4,
                            TotalBookings = 4000,
                            TotalReviews = 900,
                            TotalRooms = 0,
                            UpdatedAt = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Website = "",
                            YearBuilt = 2010,
                            YearRenovated = 2020
                        },
                        new
                        {
                            Id = 3,
                            AcceptsCreditCards = true,
                            Address = "789 Mountain View Road",
                            AvailableRooms = 0,
                            CancellationPolicy = "Free cancellation within 48 hours.",
                            CheckInTime = "15:00",
                            CheckOutTime = "11:00",
                            City = "Denver",
                            Country = "USA",
                            CreatedAt = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Escape to the mountains and enjoy breathtaking views and fresh air.",
                            Email = "mountain@ezbooking.com",
                            HasAirportShuttle = true,
                            HasBar = false,
                            HasBathTub = true,
                            HasBreakfast = false,
                            HasBusinessFacilities = false,
                            HasChildrenActivities = true,
                            HasFitnessCenter = false,
                            HasFreeWifi = true,
                            HasGym = false,
                            HasParking = true,
                            HasRestaurant = true,
                            HasRoomService = false,
                            HasSpa = true,
                            HasSwimmingPool = true,
                            HotelChain = "EzBooking",
                            HotelType = "Retreat",
                            ImageUrl = "/images/hotels/mountain-retreat.jpg",
                            IsActive = true,
                            IsFeatured = false,
                            IsPetFriendly = true,
                            LanguagesSpoken = "English, French",
                            Name = "EzBooking Mountain Retreat",
                            PaymentOptions = "Credit Card, Cash",
                            Phone = "0111222333",
                            Policies = "Pets allowed.",
                            PostalCode = "",
                            PricePerNight = 0m,
                            Rating = 4.7m,
                            Region = "",
                            StarRating = 5,
                            TotalBookings = 2500,
                            TotalReviews = 700,
                            TotalRooms = 0,
                            UpdatedAt = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Website = "",
                            YearBuilt = 2018,
                            YearRenovated = 2023
                        });
                });

            modelBuilder.Entity("TH_WEB.Models.HotelFacility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("HotelFacility");
                });

            modelBuilder.Entity("TH_WEB.Models.HotelImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("HotelImage");
                });

            modelBuilder.Entity("TH_WEB.Models.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DiscountPercentage")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExclusive")
                        .HasColumnType("bit");

                    b.Property<int?>("MinimumStay")
                        .HasColumnType("int");

                    b.Property<string>("PromoCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TermsAndConditions")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Offers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Save up to 20% on your summer vacation with our special offer.",
                            DiscountPercentage = 20,
                            EndDate = new DateTime(2025, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HotelId = 1,
                            ImageUrl = "/images/offers/summer-getaway.jpg",
                            IsActive = true,
                            IsExclusive = false,
                            PromoCode = "SUMMER20",
                            StartDate = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TermsAndConditions = "",
                            Title = "Summer Getaway Deal"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Book a weekend stay and get a free breakfast for two.",
                            DiscountPercentage = 15,
                            EndDate = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HotelId = 1,
                            ImageUrl = "/images/offers/weekend-escape.jpg",
                            IsActive = true,
                            IsExclusive = false,
                            PromoCode = "WEEKEND15",
                            StartDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TermsAndConditions = "",
                            Title = "Weekend Escape"
                        });
                });

            modelBuilder.Entity("TH_WEB.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BookingId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CleanlinessRating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ComfortRating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("HotelResponse")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<decimal?>("LocationRating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(3,1)");

                    b.Property<DateTime?>("ResponseDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReviewerEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReviewerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("ServiceRating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TravelerType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TripType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("ValueForMoneyRating")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("HotelId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("TH_WEB.Models.ReviewImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ReviewId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReviewId");

                    b.ToTable("ReviewImage");
                });

            modelBuilder.Entity("TH_WEB.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AdultCapacity")
                        .HasColumnType("int");

                    b.Property<int>("BedCount")
                        .HasColumnType("int");

                    b.Property<string>("BedType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BreakfastPolicy")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CancellationPolicy")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ChildCapacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("DiscountedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Floor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("HasAirConditioning")
                        .HasColumnType("bit");

                    b.Property<bool>("HasBalcony")
                        .HasColumnType("bit");

                    b.Property<bool>("HasBathtub")
                        .HasColumnType("bit");

                    b.Property<bool>("HasCoffeemaker")
                        .HasColumnType("bit");

                    b.Property<bool>("HasHairDryer")
                        .HasColumnType("bit");

                    b.Property<bool>("HasIron")
                        .HasColumnType("bit");

                    b.Property<bool>("HasMinibar")
                        .HasColumnType("bit");

                    b.Property<bool>("HasPrivateBathroom")
                        .HasColumnType("bit");

                    b.Property<bool>("HasRoomService")
                        .HasColumnType("bit");

                    b.Property<bool>("HasSafe")
                        .HasColumnType("bit");

                    b.Property<bool>("HasShower")
                        .HasColumnType("bit");

                    b.Property<bool>("HasTV")
                        .HasColumnType("bit");

                    b.Property<bool>("HasWifi")
                        .HasColumnType("bit");

                    b.Property<bool>("HasWorkDesk")
                        .HasColumnType("bit");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNonSmoking")
                        .HasColumnType("bit");

                    b.Property<string>("MainImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("MaxOccupancy")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SquareMeters")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ViewType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdultCapacity = 2,
                            BedCount = 1,
                            BedType = "King",
                            BreakfastPolicy = "Included",
                            CancellationPolicy = "Free cancellation within 24 hours.",
                            ChildCapacity = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Spacious deluxe room with city view.",
                            DiscountedPrice = 179.99m,
                            Floor = "10",
                            HasAirConditioning = true,
                            HasBalcony = false,
                            HasBathtub = true,
                            HasCoffeemaker = true,
                            HasHairDryer = true,
                            HasIron = false,
                            HasMinibar = true,
                            HasPrivateBathroom = true,
                            HasRoomService = true,
                            HasSafe = true,
                            HasShower = true,
                            HasTV = true,
                            HasWifi = true,
                            HasWorkDesk = true,
                            HotelId = 1,
                            IsActive = true,
                            IsAvailable = true,
                            IsFeatured = false,
                            IsNonSmoking = true,
                            MainImageUrl = "/images/rooms/deluxe-king.jpg",
                            MaxOccupancy = 2,
                            Price = 199.99m,
                            RoomNumber = "101",
                            RoomType = "Deluxe",
                            SquareMeters = 35,
                            UpdatedAt = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ViewType = "City"
                        },
                        new
                        {
                            Id = 2,
                            AdultCapacity = 2,
                            BedCount = 2,
                            BedType = "Queen",
                            BreakfastPolicy = "Available for fee",
                            CancellationPolicy = "Non-refundable.",
                            ChildCapacity = 1,
                            CreatedAt = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Luxury suite with separate living area and city view.",
                            DiscountedPrice = 269.99m,
                            Floor = "20",
                            HasAirConditioning = true,
                            HasBalcony = true,
                            HasBathtub = true,
                            HasCoffeemaker = true,
                            HasHairDryer = true,
                            HasIron = true,
                            HasMinibar = true,
                            HasPrivateBathroom = true,
                            HasRoomService = true,
                            HasSafe = true,
                            HasShower = true,
                            HasTV = true,
                            HasWifi = true,
                            HasWorkDesk = true,
                            HotelId = 1,
                            IsActive = true,
                            IsAvailable = true,
                            IsFeatured = true,
                            IsNonSmoking = true,
                            MainImageUrl = "/images/rooms/executive-suite.jpg",
                            MaxOccupancy = 2,
                            Price = 299.99m,
                            RoomNumber = "201",
                            RoomType = "Suite",
                            SquareMeters = 50,
                            UpdatedAt = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ViewType = "City"
                        },
                        new
                        {
                            Id = 3,
                            AdultCapacity = 2,
                            BedCount = 2,
                            BedType = "Twin",
                            BreakfastPolicy = "Included",
                            CancellationPolicy = "Free cancellation within 48 hours.",
                            ChildCapacity = 2,
                            CreatedAt = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Comfortable room with two double beds.",
                            DiscountedPrice = 139.99m,
                            Floor = "5",
                            HasAirConditioning = true,
                            HasBalcony = false,
                            HasBathtub = false,
                            HasCoffeemaker = false,
                            HasHairDryer = true,
                            HasIron = false,
                            HasMinibar = false,
                            HasPrivateBathroom = true,
                            HasRoomService = false,
                            HasSafe = false,
                            HasShower = true,
                            HasTV = true,
                            HasWifi = true,
                            HasWorkDesk = true,
                            HotelId = 2,
                            IsActive = true,
                            IsAvailable = true,
                            IsFeatured = false,
                            IsNonSmoking = true,
                            MainImageUrl = "/images/rooms/standard-double.jpg",
                            MaxOccupancy = 4,
                            Price = 149.99m,
                            RoomNumber = "301",
                            RoomType = "Standard",
                            SquareMeters = 30,
                            UpdatedAt = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ViewType = "City"
                        });
                });

            modelBuilder.Entity("TH_WEB.Models.RoomAmenity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomAmenity");
                });

            modelBuilder.Entity("TH_WEB.Models.RoomImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomImage");
                });

            modelBuilder.Entity("TH_WEB.Models.Booking", b =>
                {
                    b.HasOne("TH_WEB.Models.Hotel", "Hotel")
                        .WithMany("Bookings")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TH_WEB.Models.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("TH_WEB.Models.BookingAddon", b =>
                {
                    b.HasOne("TH_WEB.Models.Booking", "Booking")
                        .WithMany("Addons")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("TH_WEB.Models.HotelFacility", b =>
                {
                    b.HasOne("TH_WEB.Models.Hotel", "Hotel")
                        .WithMany("Facilities")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("TH_WEB.Models.HotelImage", b =>
                {
                    b.HasOne("TH_WEB.Models.Hotel", "Hotel")
                        .WithMany("HotelImages")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("TH_WEB.Models.Offer", b =>
                {
                    b.HasOne("TH_WEB.Models.Hotel", "Hotel")
                        .WithMany("Offers")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("TH_WEB.Models.Review", b =>
                {
                    b.HasOne("TH_WEB.Models.Booking", "Booking")
                        .WithMany()
                        .HasForeignKey("BookingId");

                    b.HasOne("TH_WEB.Models.Hotel", "Hotel")
                        .WithMany("Reviews")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("TH_WEB.Models.ReviewImage", b =>
                {
                    b.HasOne("TH_WEB.Models.Review", "Review")
                        .WithMany("Images")
                        .HasForeignKey("ReviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Review");
                });

            modelBuilder.Entity("TH_WEB.Models.Room", b =>
                {
                    b.HasOne("TH_WEB.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("TH_WEB.Models.RoomAmenity", b =>
                {
                    b.HasOne("TH_WEB.Models.Room", "Room")
                        .WithMany("Amenities")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("TH_WEB.Models.RoomImage", b =>
                {
                    b.HasOne("TH_WEB.Models.Room", "Room")
                        .WithMany("Images")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("TH_WEB.Models.Booking", b =>
                {
                    b.Navigation("Addons");
                });

            modelBuilder.Entity("TH_WEB.Models.Hotel", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Facilities");

                    b.Navigation("HotelImages");

                    b.Navigation("Offers");

                    b.Navigation("Reviews");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("TH_WEB.Models.Review", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("TH_WEB.Models.Room", b =>
                {
                    b.Navigation("Amenities");

                    b.Navigation("Bookings");

                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
